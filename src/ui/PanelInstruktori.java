/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import domen.Instruktor;
import domen.Sertifikat;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import kontroleri.KontrolerInstruktor;
import kontroleri.KontrolerPolaznik;
import kontroleri.KontrolerSertifikat;

/**
 *
 * @author Windows HD
 */
public class PanelInstruktori extends javax.swing.JPanel {

    /**
     * Creates new form Panel1
     */
    Instruktor instruktor;
    
    List<Sertifikat> sertifikati1 = new LinkedList<>();
    
    public PanelInstruktori() throws SQLException {
        initComponents();
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        tblSertifikati.setDefaultRenderer(Object.class, centerRenderer);
        napuniTabeluInstruktori();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(32767, 0));
        jLabel1 = new javax.swing.JLabel();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(50, 0), new java.awt.Dimension(32767, 0));
        lblIzmenaLozinke = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(70, 0), new java.awt.Dimension(32767, 0));
        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInstruktori = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSertifikati = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btnDodajCas2 = new javax.swing.JButton();
        btnIzmeniCas2 = new javax.swing.JButton();
        btnObrisiCas2 = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(800, 450));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel2.setMaximumSize(new java.awt.Dimension(32767, 50));
        jPanel2.setPreferredSize(new java.awt.Dimension(565, 50));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        jPanel7.add(filler1);

        jLabel1.setText("Stranica za prikaz svih instruktora");
        jPanel7.add(jLabel1);
        jPanel7.add(filler3);
        jPanel7.add(lblIzmenaLozinke);

        jPanel2.add(jPanel7);

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));
        jPanel8.add(filler2);

        jPanel2.add(jPanel8);

        add(jPanel2);

        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.PAGE_AXIS));

        tblInstruktori.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ime", "Prezime", "Email", "Korisnicko ime"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblInstruktori.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tblInstruktori.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblInstruktoriMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblInstruktori);

        jPanel1.add(jScrollPane1);

        jPanel9.setMaximumSize(new java.awt.Dimension(1500, 300));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout();
        flowLayout1.setAlignOnBaseline(true);
        jPanel9.setLayout(flowLayout1);
        jPanel1.add(jPanel9);

        jPanel4.add(jPanel1);

        jPanel5.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 10));
        jPanel5.setMaximumSize(new java.awt.Dimension(325, 3200));
        jPanel5.setMinimumSize(new java.awt.Dimension(100, 100));
        jPanel5.setPreferredSize(new java.awt.Dimension(325, 100));
        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.PAGE_AXIS));

        jScrollPane2.setMaximumSize(new java.awt.Dimension(32767, 250));
        jScrollPane2.setMinimumSize(new java.awt.Dimension(16, 250));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(452, 250));

        tblSertifikati.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Naziv sertifikata"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSertifikati.setMaximumSize(new java.awt.Dimension(2147483647, 150));
        tblSertifikati.setMinimumSize(new java.awt.Dimension(100, 70));
        tblSertifikati.setPreferredSize(new java.awt.Dimension(75, 70));
        jScrollPane2.setViewportView(tblSertifikati);

        jPanel5.add(jScrollPane2);

        jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(100, 0, 0, 0));
        jPanel3.setMaximumSize(new java.awt.Dimension(32767, 300));
        jPanel3.setMinimumSize(new java.awt.Dimension(118, 150));
        jPanel3.setPreferredSize(new java.awt.Dimension(100, 200));
        jPanel3.setLayout(new java.awt.GridLayout(3, 0, 0, 15));

        btnDodajCas2.setForeground(new java.awt.Color(0, 153, 51));
        btnDodajCas2.setText("Dodaj instruktora");
        btnDodajCas2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDodajCas2.setPreferredSize(new java.awt.Dimension(250, 45));
        btnDodajCas2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajCas2ActionPerformed(evt);
            }
        });
        jPanel3.add(btnDodajCas2);

        btnIzmeniCas2.setForeground(new java.awt.Color(0, 0, 255));
        btnIzmeniCas2.setText("Izmeni instruktora");
        btnIzmeniCas2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnIzmeniCas2.setPreferredSize(new java.awt.Dimension(250, 45));
        btnIzmeniCas2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniCas2ActionPerformed(evt);
            }
        });
        jPanel3.add(btnIzmeniCas2);

        btnObrisiCas2.setForeground(new java.awt.Color(255, 51, 51));
        btnObrisiCas2.setText("Otkaz instruktoru");
        btnObrisiCas2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnObrisiCas2.setPreferredSize(new java.awt.Dimension(250, 45));
        btnObrisiCas2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiCas2ActionPerformed(evt);
            }
        });
        jPanel3.add(btnObrisiCas2);

        jPanel5.add(jPanel3);

        jPanel4.add(jPanel5);

        add(jPanel4);
    }// </editor-fold>//GEN-END:initComponents

    private void tblInstruktoriMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblInstruktoriMouseClicked
            
        try {
            if(tblInstruktori.getSelectedRow()!=-1){
                List<Instruktor> instruktori = KontrolerInstruktor.getList();
                instruktor = instruktori.get(tblInstruktori.getSelectedRow());
                TableModel tm = tblSertifikati.getModel();
                DefaultTableModel dtm = (DefaultTableModel) tm;
                List<Sertifikat> sertifikati=new LinkedList<>();
                if(instruktor!=null){
                    sertifikati = KontrolerSertifikat.getList(instruktor);
                }
                dtm.setRowCount(0);
                for(Sertifikat s: sertifikati){
                    Object[] red = new Object[]{s.getNaziv()};
                    dtm.addRow(red);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(PanelInstruktori.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblInstruktoriMouseClicked

    private void btnDodajCas2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajCas2ActionPerformed
        try {
            DodavanjeInstruktora dif = new DodavanjeInstruktora(null, true);
            dif.setVisible(true);
            dif.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosed(WindowEvent e) {
                    try {
                        napuniTabeluInstruktori();
                    } catch (SQLException ex) {
                        Logger.getLogger(PanelPolaznici.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            });
        } catch (SQLException ex) {
            Logger.getLogger(GlavnaAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDodajCas2ActionPerformed

    private void btnIzmeniCas2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniCas2ActionPerformed
        try {

            Integer selektovanRed;
            selektovanRed=tblInstruktori.getSelectedRow();
        if(selektovanRed!=-1){
            TableModel tm = tblInstruktori.getModel();
            DefaultTableModel dtm = (DefaultTableModel) tm;
            Instruktor ins = new Instruktor();
            List<Instruktor> instruktori = KontrolerInstruktor.getList();
            for(int i=0;i<dtm.getRowCount();i++){
                if(i==selektovanRed){
                    ins = instruktori.get(i);
                }
            }

                NalogInstruktora f = new NalogInstruktora(null, true, ins);
                f.setVisible(true);
                f.addWindowListener(new WindowAdapter() {
                    @Override
                    public void windowClosed(WindowEvent e) {
                        try {
                            napuniTabeluInstruktori();
                        } catch (SQLException ex) {
                            Logger.getLogger(GlavnaAdmin.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                });
            }
            else{
                JOptionPane.showMessageDialog(this, "Selektujete red za izmenu","Greska",JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (SQLException ex) {
            Logger.getLogger(GlavnaAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnIzmeniCas2ActionPerformed

    private void btnObrisiCas2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiCas2ActionPerformed
        Integer selektovanRed;
        selektovanRed=tblInstruktori.getSelectedRow();
        if(selektovanRed!=-1){
        try {
            Object[] opcije = {"Da", "Ne"};
            int izbor = JOptionPane.showOptionDialog(this,"Da li sigurno zelite da ispisete polaznika "
                    +instruktor.getIme()+" "+instruktor.getPrezime()+"?","Ispisivanje polaznika",
                    JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,null,opcije,opcije[1]);

            if(izbor == JOptionPane.YES_OPTION){
//                KontrolerPolaznik.ispisi(polaznik);
                KontrolerInstruktor.otkaz(instruktor);
                napuniTabeluInstruktori();
                JOptionPane.showMessageDialog(null, "Polaznik "+instruktor.getIme()+" "+instruktor.getPrezime() +" uspesno ispisan.","Ispisivanje polaznika",JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(GlavnaAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else{
            JOptionPane.showMessageDialog(this, "Selektujete red za brisanje","Greska",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnObrisiCas2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajCas2;
    private javax.swing.JButton btnIzmeniCas2;
    private javax.swing.JButton btnObrisiCas2;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblIzmenaLozinke;
    private javax.swing.JTable tblInstruktori;
    private javax.swing.JTable tblSertifikati;
    // End of variables declaration//GEN-END:variables



    private void napuniTabeluInstruktori() throws SQLException {
        TableModel tm = tblInstruktori.getModel();
        DefaultTableModel dtm = (DefaultTableModel) tm;
        dtm.setRowCount(0);
        List<Instruktor> instruktori = KontrolerInstruktor.getList();
        for(Instruktor i : instruktori){
            Object[] red = new Object[]{i.getIme(),i.getPrezime(),i.getEmail(),i.getKorisnickoIme(),i.getDatumIvremeRegistracije()};
            dtm.addRow(red);
        }
    }
    

}
