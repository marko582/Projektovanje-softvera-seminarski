/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ui;

import broker.DatabaseConnection;
import domen.Instruktor;
import domen.PlanObuke;
import domen.Polaznik;
import domen.StavkaEvidencijeCasa;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Time;
import java.time.Duration;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import kontroleri.KontrolerPlanObuke;
import kontroleri.KontrolerStavke;

/**
 *
 * @author Windows HD
 */
public class DodavanjeCasova extends javax.swing.JDialog {

    /**
     * Creates new form DodavanjeCasova
     */
    List<StavkaEvidencijeCasa> casovi = new ArrayList<StavkaEvidencijeCasa>();
    public DodavanjeCasova(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
    }
    Instruktor i;
    Polaznik p;
    Long rb;
    public DodavanjeCasova(java.awt.Frame parent, boolean modal,Instruktor i, Polaznik p,Long rb) throws SQLException {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.i=i;
        this.p=p;
        this.rb=rb;
        
        List<PlanObuke> planovi = KontrolerPlanObuke.getList();
        for (PlanObuke plan: planovi){
            cmbPlanRada.addItem(plan);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        dtcDatum = new com.toedter.calendar.JDateChooser();
        tmpPocetak = new com.github.lgooddatepicker.components.TimePicker();
        tmpKraj = new com.github.lgooddatepicker.components.TimePicker();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtKomentar = new javax.swing.JTextArea();
        cmbPlanRada = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCasovi = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btnDodajJos = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(150, 0), new java.awt.Dimension(0, 0));
        btnKraj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1000, 600));
        setMinimumSize(new java.awt.Dimension(1000, 600));
        setPreferredSize(new java.awt.Dimension(1000, 600));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jPanel1.setMinimumSize(new java.awt.Dimension(150, 50));
        jPanel1.setPreferredSize(new java.awt.Dimension(150, 50));

        jLabel6.setText("Dodavanje casova");
        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel6)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel6)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        getContentPane().add(jPanel1);

        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

        jPanel2.setMaximumSize(new java.awt.Dimension(500, 300));
        jPanel2.setMinimumSize(new java.awt.Dimension(500, 300));
        jPanel2.setPreferredSize(new java.awt.Dimension(500, 300));
        java.awt.GridBagLayout jPanel2Layout = new java.awt.GridBagLayout();
        jPanel2Layout.columnWidths = new int[] {0, 15, 0};
        jPanel2Layout.rowHeights = new int[] {0, 15, 0, 15, 0, 15, 0, 15, 0};
        jPanel2.setLayout(jPanel2Layout);

        jLabel7.setText("Datum casa:");
        jLabel7.setMaximumSize(new java.awt.Dimension(150, 20));
        jLabel7.setMinimumSize(new java.awt.Dimension(150, 20));
        jLabel7.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel2.add(jLabel7, gridBagConstraints);

        jLabel8.setText("Vreme pocetka:");
        jLabel8.setMaximumSize(new java.awt.Dimension(150, 20));
        jLabel8.setMinimumSize(new java.awt.Dimension(150, 20));
        jLabel8.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel2.add(jLabel8, gridBagConstraints);

        jLabel9.setText("Vreme kraja:");
        jLabel9.setMaximumSize(new java.awt.Dimension(150, 20));
        jLabel9.setMinimumSize(new java.awt.Dimension(150, 20));
        jLabel9.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel2.add(jLabel9, gridBagConstraints);

        jLabel10.setText("Komentar:");
        jLabel10.setMaximumSize(new java.awt.Dimension(150, 20));
        jLabel10.setMinimumSize(new java.awt.Dimension(150, 20));
        jLabel10.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        jPanel2.add(jLabel10, gridBagConstraints);

        jLabel11.setText("Plan rada:");
        jLabel11.setMaximumSize(new java.awt.Dimension(150, 20));
        jLabel11.setMinimumSize(new java.awt.Dimension(150, 20));
        jLabel11.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        jPanel2.add(jLabel11, gridBagConstraints);

        dtcDatum.setMinimumSize(new java.awt.Dimension(230, 20));
        dtcDatum.setPreferredSize(new java.awt.Dimension(230, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel2.add(dtcDatum, gridBagConstraints);

        tmpPocetak.setMinimumSize(new java.awt.Dimension(230, 20));
        tmpPocetak.setPreferredSize(new java.awt.Dimension(230, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel2.add(tmpPocetak, gridBagConstraints);

        tmpKraj.setMinimumSize(new java.awt.Dimension(230, 20));
        tmpKraj.setPreferredSize(new java.awt.Dimension(230, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        jPanel2.add(tmpKraj, gridBagConstraints);

        txtKomentar.setColumns(20);
        txtKomentar.setRows(5);
        txtKomentar.setPreferredSize(new java.awt.Dimension(230, 20));
        jScrollPane1.setViewportView(txtKomentar);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        jPanel2.add(jScrollPane1, gridBagConstraints);

        cmbPlanRada.setMaximumSize(new java.awt.Dimension(230, 20));
        cmbPlanRada.setMinimumSize(new java.awt.Dimension(230, 20));
        cmbPlanRada.setPreferredSize(new java.awt.Dimension(230, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        jPanel2.add(cmbPlanRada, gridBagConstraints);

        jPanel4.add(jPanel2);

        jPanel5.setMaximumSize(new java.awt.Dimension(500, 300));
        jPanel5.setMinimumSize(new java.awt.Dimension(500, 300));
        jPanel5.setPreferredSize(new java.awt.Dimension(500, 300));

        tblCasovi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Datum casa", "Vreme pocetka", "Vreme kraja", "Trajanje", "Plan rada"
            }
        ));
        jScrollPane2.setViewportView(tblCasovi);

        jPanel5.add(jScrollPane2);

        jPanel4.add(jPanel5);

        getContentPane().add(jPanel4);

        jPanel3.setMinimumSize(new java.awt.Dimension(150, 100));
        jPanel3.setPreferredSize(new java.awt.Dimension(150, 100));
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 10));

        btnDodajJos.setText("Dodaj jos");
        btnDodajJos.setPreferredSize(new java.awt.Dimension(150, 50));
        btnDodajJos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajJosActionPerformed(evt);
            }
        });
        jPanel3.add(btnDodajJos);
        jPanel3.add(filler1);

        btnKraj.setText("Kraj dodavanja");
        btnKraj.setPreferredSize(new java.awt.Dimension(150, 50));
        btnKraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKrajActionPerformed(evt);
            }
        });
        jPanel3.add(btnKraj);

        getContentPane().add(jPanel3);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajJosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajJosActionPerformed
        try {
            Connection conn = DatabaseConnection.getInstance();
            Long id=0l;
            String query="SELECT id FROM evidencijacasa WHERE idInstruktor="+i.getId()+" AND idPolaznika="+p.getId();
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(query);
            rs.next();
            id=rs.getLong(1);
//            System.out.println("id je "+id);
            LocalTime t1 = tmpPocetak.getTime();
            LocalTime t2 = tmpKraj.getTime();
            Integer trajanje = Integer.valueOf(String.valueOf(Duration.between(t1, t2).toMinutes()));
            rb++;
            StavkaEvidencijeCasa cas = new StavkaEvidencijeCasa(id, rb, dtcDatum.getDate(), 
                    t1, t2, trajanje, txtKomentar.getText(), "zakazan", (PlanObuke)cmbPlanRada.getSelectedItem());
                    
            casovi.add(cas);
            
            TableModel tm = tblCasovi.getModel();
            DefaultTableModel dtm = (DefaultTableModel) tm;
            dtm.setRowCount(0);
            for(StavkaEvidencijeCasa s: casovi){
                Object[] red = new Object[]{s.getDatumCasa(),s.getVremePocetkaCasa()+"h",
                  s.getVremeKrajaCasa()+"h",s.getTrajanjeCasa()+"min",s.getPlanObuke().getNaziv()};
                dtm.addRow(red);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(DodavanjeCasova.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnDodajJosActionPerformed

    private void btnKrajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKrajActionPerformed
        try {
            Connection conn = DatabaseConnection.getInstance();
            for(StavkaEvidencijeCasa cas: casovi){
                String query="INSERT INTO stavkaevidencijecasa" +
                "(id, rb, datumCasa, vremePocetkaCasa, vremeKrajaCasa,trajanjeCasa, komentar, idPlanObuke)" +
                "VALUES (?,?,?,?,?,?,?,?);";
//                System.out.println("redni broj je "+cas.getRb());
                PreparedStatement ps = conn.prepareStatement(query);
                ps.setLong(1, cas.getId());
                ps.setLong(2, cas.getRb());
                ps.setDate(3, new java.sql.Date(cas.getDatumCasa().getTime()));
                ps.setTime(4, Time.valueOf(cas.getVremePocetkaCasa()));
                ps.setTime(5, Time.valueOf(cas.getVremeKrajaCasa()));
                ps.setInt(6, Integer.valueOf(String.valueOf(Duration.between(cas.getVremePocetkaCasa(),cas.getVremeKrajaCasa() ).toMinutes())));
                ps.setString(7, cas.getKomentar());
                ps.setLong(8, cas.getPlanObuke().getId());
                ps.executeUpdate();
                ps.close();
            }
            this.dispose();
        } catch (SQLException ex) {            
            Logger.getLogger(DodavanjeCasova.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnKrajActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajJos;
    private javax.swing.JButton btnKraj;
    private javax.swing.JComboBox<PlanObuke> cmbPlanRada;
    private com.toedter.calendar.JDateChooser dtcDatum;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblCasovi;
    private com.github.lgooddatepicker.components.TimePicker tmpKraj;
    private com.github.lgooddatepicker.components.TimePicker tmpPocetak;
    private javax.swing.JTextArea txtKomentar;
    // End of variables declaration//GEN-END:variables
}
