/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ui;

import domen.Instruktor;
import domen.Sertifikat;
import java.sql.SQLException;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import kontroleri.KontrolerSertifikat;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import kontroleri.KontrolerInsSer;
import kontroleri.KontrolerInstruktor;

/**
 *
 * @author Windows HD
 */
public class DodavanjeInstruktora extends javax.swing.JDialog {

    /**
     * Creates new form NalogInstruktora
     */
    List<Sertifikat> sertifikatiInstruktora = new LinkedList<>();
    public DodavanjeInstruktora(java.awt.Frame parent, boolean modal) throws SQLException {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        napuniCmbSertifikati();

        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        tblSertifikati.setDefaultRenderer(Object.class, centerRenderer);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtIme = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPrezime = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtKorisnickoIme = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cmbSertifikat = new javax.swing.JComboBox<>();
        btnDodaj = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btnObrisiSertifikat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSertifikati = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtLozinka = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        txtPotvrdaLozinka = new javax.swing.JPasswordField();
        btnPromeniLozinku = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(900, 700));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jPanel1.setMaximumSize(new java.awt.Dimension(235, 100));
        jPanel1.setMinimumSize(new java.awt.Dimension(235, 100));
        jPanel1.setPreferredSize(new java.awt.Dimension(600, 100));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Dodavanje instruktora");
        jPanel1.add(jLabel1);

        getContentPane().add(jPanel1);

        jPanel2.setMaximumSize(new java.awt.Dimension(400, 350));
        jPanel2.setMinimumSize(new java.awt.Dimension(400, 350));
        jPanel2.setPreferredSize(new java.awt.Dimension(400, 350));
        java.awt.GridBagLayout jPanel2Layout = new java.awt.GridBagLayout();
        jPanel2Layout.columnWidths = new int[] {0, 10, 0, 10, 0, 10, 0};
        jPanel2Layout.rowHeights = new int[] {0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0};
        jPanel2.setLayout(jPanel2Layout);

        jLabel2.setText("Ime:");
        jLabel2.setMaximumSize(new java.awt.Dimension(150, 25));
        jLabel2.setMinimumSize(new java.awt.Dimension(150, 25));
        jLabel2.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel2.add(jLabel2, gridBagConstraints);

        txtIme.setMaximumSize(new java.awt.Dimension(200, 25));
        txtIme.setMinimumSize(new java.awt.Dimension(200, 25));
        txtIme.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        jPanel2.add(txtIme, gridBagConstraints);

        jLabel3.setText("Prezime:");
        jLabel3.setMaximumSize(new java.awt.Dimension(150, 25));
        jLabel3.setMinimumSize(new java.awt.Dimension(150, 25));
        jLabel3.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel2.add(jLabel3, gridBagConstraints);

        txtPrezime.setMaximumSize(new java.awt.Dimension(200, 25));
        txtPrezime.setMinimumSize(new java.awt.Dimension(200, 25));
        txtPrezime.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        jPanel2.add(txtPrezime, gridBagConstraints);

        jLabel4.setText("Email:");
        jLabel4.setMaximumSize(new java.awt.Dimension(150, 25));
        jLabel4.setMinimumSize(new java.awt.Dimension(150, 25));
        jLabel4.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        jPanel2.add(jLabel4, gridBagConstraints);

        txtKorisnickoIme.setMaximumSize(new java.awt.Dimension(200, 25));
        txtKorisnickoIme.setMinimumSize(new java.awt.Dimension(200, 25));
        txtKorisnickoIme.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        jPanel2.add(txtKorisnickoIme, gridBagConstraints);

        jLabel5.setText("Korisnicko ime:");
        jLabel5.setMaximumSize(new java.awt.Dimension(150, 25));
        jLabel5.setMinimumSize(new java.awt.Dimension(150, 25));
        jLabel5.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        jPanel2.add(jLabel5, gridBagConstraints);

        txtEmail.setMaximumSize(new java.awt.Dimension(200, 25));
        txtEmail.setMinimumSize(new java.awt.Dimension(200, 25));
        txtEmail.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 12;
        jPanel2.add(txtEmail, gridBagConstraints);

        jLabel8.setText("Sertifikat:");
        jLabel8.setMaximumSize(new java.awt.Dimension(150, 25));
        jLabel8.setMinimumSize(new java.awt.Dimension(150, 25));
        jLabel8.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 20;
        jPanel2.add(jLabel8, gridBagConstraints);

        cmbSertifikat.setMaximumSize(new java.awt.Dimension(200, 25));
        cmbSertifikat.setMinimumSize(new java.awt.Dimension(200, 25));
        cmbSertifikat.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 20;
        jPanel2.add(cmbSertifikat, gridBagConstraints);

        btnDodaj.setText("Dodaj sertifikat");
        btnDodaj.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDodaj.setMaximumSize(new java.awt.Dimension(150, 30));
        btnDodaj.setMinimumSize(new java.awt.Dimension(150, 30));
        btnDodaj.setPreferredSize(new java.awt.Dimension(150, 30));
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.gridwidth = 5;
        jPanel2.add(btnDodaj, gridBagConstraints);

        jPanel4.add(jPanel2);

        jPanel5.setMinimumSize(new java.awt.Dimension(400, 350));
        jPanel5.setPreferredSize(new java.awt.Dimension(400, 350));

        btnObrisiSertifikat.setForeground(new java.awt.Color(255, 0, 0));
        btnObrisiSertifikat.setText("Obrisi sertifikat");
        btnObrisiSertifikat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnObrisiSertifikat.setMaximumSize(new java.awt.Dimension(150, 30));
        btnObrisiSertifikat.setMinimumSize(new java.awt.Dimension(150, 30));
        btnObrisiSertifikat.setPreferredSize(new java.awt.Dimension(150, 30));
        btnObrisiSertifikat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiSertifikatActionPerformed(evt);
            }
        });
        jPanel5.add(btnObrisiSertifikat);

        tblSertifikati.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Sertifikati"
            }
        ));
        tblSertifikati.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tblSertifikati.setMaximumSize(new java.awt.Dimension(400, 300));
        tblSertifikati.setMinimumSize(new java.awt.Dimension(400, 300));
        tblSertifikati.setPreferredSize(new java.awt.Dimension(400, 300));
        jScrollPane1.setViewportView(tblSertifikati);

        jPanel5.add(jScrollPane1);

        jPanel4.add(jPanel5);

        getContentPane().add(jPanel4);

        jPanel3.setMaximumSize(new java.awt.Dimension(32767, 150));
        jPanel3.setMinimumSize(new java.awt.Dimension(100, 150));
        jPanel3.setPreferredSize(new java.awt.Dimension(100, 150));
        java.awt.GridBagLayout jPanel3Layout = new java.awt.GridBagLayout();
        jPanel3Layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0};
        jPanel3Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanel3.setLayout(jPanel3Layout);

        jLabel6.setText("Lozinka:");
        jLabel6.setMaximumSize(new java.awt.Dimension(150, 25));
        jLabel6.setMinimumSize(new java.awt.Dimension(150, 25));
        jLabel6.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel3.add(jLabel6, gridBagConstraints);

        txtLozinka.setMinimumSize(new java.awt.Dimension(150, 25));
        txtLozinka.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        jPanel3.add(txtLozinka, gridBagConstraints);

        jLabel7.setText("Potvrda lozinke:");
        jLabel7.setMaximumSize(new java.awt.Dimension(150, 25));
        jLabel7.setMinimumSize(new java.awt.Dimension(150, 25));
        jLabel7.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel3.add(jLabel7, gridBagConstraints);

        txtPotvrdaLozinka.setMinimumSize(new java.awt.Dimension(150, 25));
        txtPotvrdaLozinka.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        jPanel3.add(txtPotvrdaLozinka, gridBagConstraints);

        btnPromeniLozinku.setText("Dodaj instruktora");
        btnPromeniLozinku.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPromeniLozinku.setMaximumSize(new java.awt.Dimension(150, 30));
        btnPromeniLozinku.setMinimumSize(new java.awt.Dimension(150, 30));
        btnPromeniLozinku.setPreferredSize(new java.awt.Dimension(150, 30));
        btnPromeniLozinku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPromeniLozinkuActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 7;
        jPanel3.add(btnPromeniLozinku, gridBagConstraints);

        getContentPane().add(jPanel3);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnObrisiSertifikatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiSertifikatActionPerformed
            
        int selektovanRed;
        selektovanRed=tblSertifikati.getSelectedRow();
        TableModel tm = tblSertifikati.getModel();
        DefaultTableModel dtm = (DefaultTableModel) tm;
        cmbSertifikat.removeAllItems();
        Sertifikat ser = sertifikatiInstruktora.get(selektovanRed);
        sertifikatiInstruktora.remove(ser);
        dtm.setRowCount(0);
        for (Sertifikat s : sertifikatiInstruktora) {
            Object[] red = new Object[]{s.getNaziv()};
            dtm.addRow(red);
        }
       
      
    }//GEN-LAST:event_btnObrisiSertifikatActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        try {
            Sertifikat ser = (Sertifikat) cmbSertifikat.getSelectedItem();
            if(ser==null)
                return;
            sertifikatiInstruktora.add(ser);
            TableModel tm = tblSertifikati.getModel();
            DefaultTableModel dtm = (DefaultTableModel) tm;
            dtm.setRowCount(0);
            for (Sertifikat s : sertifikatiInstruktora) {
                Object[] red = new Object[]{s.getNaziv()};
                dtm.addRow(red);
            }
            cmbSertifikat.removeAllItems();
            List<Sertifikat> sviSertifikati = KontrolerSertifikat.getList();
            for(Sertifikat s:sviSertifikati){
                if(!sertifikatiInstruktora.contains(s)){
                    cmbSertifikat.addItem(s);
                }
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(DodavanjeInstruktora.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnPromeniLozinkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPromeniLozinkuActionPerformed
            String greska="";
            
            if(validateEmail(txtEmail.getText()) && validateLozinka(txtLozinka.getText()) 
                    && txtLozinka.getText().equals(txtPotvrdaLozinka.getText())
                &&txtKorisnickoIme.getText().length()>2 && !txtIme.getText().equals("") && !txtPrezime.getText().equals("")){
                try {
                    kreirajInstruktora();
                    this.dispose();
                } catch (SQLException ex) {
                    Logger.getLogger(DodavanjeInstruktora.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if(txtIme.getText().equals("")){
                greska+="Ime je prazno.\n";
            }
            if(txtPrezime.getText().equals("")){
                greska+="Prezime je prazno.\n";
            }
            if(txtKorisnickoIme.getText().length()<3){
                greska+="Korisnicko ime mora da sadrzi minimum 3 karaktera.\n";
            }
            if(!validateEmail(txtEmail.getText())){
                greska+="Email nije u odgovarajucem formatu.\n";
            }
            if(!validateLozinka(txtLozinka.getText())){
                greska+="Lozinka nije u odgovarajucem formatu.\n";
            }
            if(!txtLozinka.getText().equals(txtPotvrdaLozinka.getText())){
                greska+="Lozinke se ne podudaraju.\n";
            }

            if(!greska.equals(""))
                JOptionPane.showMessageDialog(null, greska,"Greska",JOptionPane.ERROR_MESSAGE);  
        
    }//GEN-LAST:event_btnPromeniLozinkuActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnObrisiSertifikat;
    private javax.swing.JButton btnPromeniLozinku;
    private javax.swing.JComboBox<Sertifikat> cmbSertifikat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSertifikati;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtKorisnickoIme;
    private javax.swing.JPasswordField txtLozinka;
    private javax.swing.JPasswordField txtPotvrdaLozinka;
    private javax.swing.JTextField txtPrezime;
    // End of variables declaration//GEN-END:variables

    public boolean validateLozinka(String lozinka){
        Pattern pattern = Pattern.compile("^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&+=])(?=\\S+$).{8,}$", Pattern.CASE_INSENSITIVE);
        Matcher matcher = pattern.matcher(lozinka);
        return matcher.matches();
    }
    public boolean validateEmail(String email){
        Pattern pattern = Pattern.compile("^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}$", Pattern.CASE_INSENSITIVE);
        Matcher matcher = pattern.matcher(email);
        return matcher.matches();
    }

    private void napuniCmbSertifikati() {
        try {
            List<Sertifikat> sertifikatiSvi = KontrolerSertifikat.getList();
            for (Sertifikat s : sertifikatiSvi){
                cmbSertifikat.addItem(s);
            }
        } catch (SQLException ex) {
            Logger.getLogger(GlavnaAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void kreirajInstruktora() throws SQLException {
        List<Instruktor> instruktori = KontrolerInstruktor.getList();
        Boolean postojiKorisnickoIme = false;
        for(Instruktor i : instruktori){
            if(i.getKorisnickoIme().equals(txtKorisnickoIme.getText())){
                postojiKorisnickoIme=true;
            }
        }
        if(postojiKorisnickoIme){
            JOptionPane.showMessageDialog(null, "Korisnicko ime vec postoji","Greska",JOptionPane.ERROR_MESSAGE);
        }
        else{
            Instruktor instruktor = new Instruktor(0l, txtIme.getText(), txtPrezime.getText(), 
                txtEmail.getText(), txtKorisnickoIme.getText(),txtLozinka.getText());
            KontrolerInsSer.createAdmin(instruktor, sertifikatiInstruktora);
            JOptionPane.showMessageDialog(null, "Uspesno ste dodali instruktora","",JOptionPane.INFORMATION_MESSAGE);

        }

    }

}